---
export interface Props {
  className?: string;
}

const { className = "" } = Astro.props;
---

<div class={`session-counter ${className}`} id="session-counter">
  <div class="counter-content">
    <div class="today-stats">
      <h3 class="text-h6">Today</h3>
      <div class="session-counts">
        <span class="count-item">
          <span class="count-number" id="focus-count">0</span>
          <span class="count-label">Focus</span>
        </span>
        <span class="count-item">
          <span class="count-number" id="break-count">0</span>
          <span class="count-label">Breaks</span>
        </span>
      </div>
    </div>
    <div class="streak-info">
      <span class="streak-number" id="streak-days">0</span>
      <span class="streak-label">day streak</span>
    </div>
  </div>
</div>

<style>
  .session-counter {
    background: var(--color-dark);
    border: 2px solid var(--color-light);
    padding: 1rem 1.5rem;
    color: var(--color-light);
  }

  .counter-content {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 2rem;
    flex-wrap: wrap;
  }

  .today-stats h3 {
    margin-bottom: 0.5rem;
    opacity: 0.7;
  }

  .session-counts {
    display: flex;
    gap: 1.5rem;
  }

  .count-item {
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  .count-number {
    font-size: var(--text-h3);
    font-weight: 300;
    line-height: 1;
  }

  .count-label {
    font-size: var(--text-body);
    opacity: 0.7;
    margin-top: 0.25rem;
  }

  .streak-info {
    display: flex;
    align-items: baseline;
    gap: 0.5rem;
  }

  .streak-number {
    font-size: var(--text-h3);
    font-weight: 300;
  }

  .streak-label {
    font-size: var(--text-body);
    opacity: 0.7;
  }

  @media (max-width: 640px) {
    .counter-content {
      flex-direction: column;
      gap: 1rem;
      align-items: flex-start;
    }

    .streak-info {
      align-self: flex-end;
    }
  }
</style>

<script>
  function updateSessionCounter() {
    const timer = (window as any).pomodoroTimer;
    if (!timer) return;

    const todaySessions = timer.getTodaysSessions();
    const focusCount = todaySessions.filter(s => s.mode === 'focus').length;
    const breakCount = todaySessions.filter(s => s.mode === 'short' || s.mode === 'long').length;
    const streakDays = timer.getStreakDays();

    const focusCountEl = document.getElementById('focus-count');
    const breakCountEl = document.getElementById('break-count');
    const streakDaysEl = document.getElementById('streak-days');

    if (focusCountEl) focusCountEl.textContent = focusCount.toString();
    if (breakCountEl) breakCountEl.textContent = breakCount.toString();
    if (streakDaysEl) streakDaysEl.textContent = streakDays.toString();
  }

  // Update on page load
  setTimeout(updateSessionCounter, 100);

  // Update when a session completes
  window.addEventListener('pomodoroSessionComplete', updateSessionCounter);
</script>